"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.preprocessor = void 0;
var parser_1 = require("@babel/parser");
var lodash_1 = require("lodash");
var core_1 = require("@babel/core");
var traverse_1 = __importDefault(require("@babel/traverse"));
var types_1 = require("@babel/types");
var utils_1 = require("./utils");
function preprocessor(code, options) {
    var importOrder = options.importOrder, importOrderSeparation = options.importOrderSeparation;
    var importNodes = [];
    var defaultConfig = {
        sourceType: 'module',
        plugins: ['typescript', 'jsx'],
    };
    var babelConfig = core_1.loadPartialConfig();
    var mergedOptions = lodash_1.merge(defaultConfig, babelConfig);
    var ast = parser_1.parse(code, mergedOptions);
    traverse_1.default(ast, {
        ImportDeclaration: function (path) {
            var tsModuleParent = path.findParent(function (p) { return types_1.isTSModuleDeclaration(p); });
            if (!tsModuleParent) {
                importNodes.push(path.node);
            }
        },
    });
    // short-circuit if there are no import declaration
    if (importNodes.length === 0)
        return code;
    var allImports = utils_1.getSortedNodes(importNodes, importOrder, importOrderSeparation);
    return utils_1.getCodeFromAst(allImports, code);
}
exports.preprocessor = preprocessor;
