plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'movlit'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

ext {
    snippetsDir = file("build/generated-snippets")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // JWT (JSON Web Token)
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'

    implementation group: 'org.mindrot', name: 'jbcrypt', version: '0.4'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // MySQL
    implementation 'com.mysql:mysql-connector-j'

    // Test Containers
    testImplementation 'org.testcontainers:testcontainers:1.18.3'
    testImplementation 'org.testcontainers:junit-jupiter:1.18.3'
    testImplementation 'org.testcontainers:mysql:1.18.3'

    // Rest Assured
    testImplementation 'io.rest-assured:rest-assured:5.3.0'
    testImplementation 'io.rest-assured:json-path:5.3.0'
    testImplementation 'io.rest-assured:xml-path:5.3.0'

    // Spring REST Docs
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.restdocs:spring-restdocs-restassured:3.0.0'

    // Spring Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Spring Data Elasticsearch Starter
    implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
    implementation 'org.springframework.data:spring-data-elasticsearch:5.4.0'
    implementation 'co.elastic.clients:elasticsearch-java:8.15.5'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    // AWS S3
    implementation 'software.amazon.awssdk:s3:2.21.5'

    // MongoDB
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // Websocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

/*
 * asciidoctor 태스크 수정
 * - adoc 소스 디렉토리를 src/docs/asciidoc로 지정
 * - 변환 산출물을 build/docs/asciidoc에 생성
 * - 인수 테스트로 생성된 snippetsDir을 속성(attributes)으로 전달
 */
asciidoctor {
    sourceDir = file('src/docs/asciidoc')
    outputDir = file('build/docs/asciidoc')
    sources {
        include 'index.adoc'
    }
    attributes(
            // 인수 테스트로 생성된 snippet들이 참조될 경로 (파일 시스템 경로를 사용)
            'snippets': snippetsDir.absolutePath,
            'doctype': 'book',
            'icons': 'font',
            'source-highlighter': 'highlightjs',
            'toc': 'left',
            'toclevels': '2',
            'sectlinks': '',
            // backend를 html5로 지정하여 HTML 변환
            'backend': 'html5'
    )
    dependsOn test
}

/*
 * 변환된 HTML 파일(index.html)을 src/resources/docs로 복사하는 태스크
 */
task copyIndexHtml(type: Copy) {
    dependsOn asciidoctor
    from file("build/docs/asciidoc/index.html")
    into file("src/resources/docs")
    // 필요시 파일명 변경 로직 추가 가능 (여기서는 이미 index.html 이므로 rename 불필요)
}

/*
 * build 시 copyIndexHtml 작업도 실행되도록 설정
 */
build {
    dependsOn copyIndexHtml
}

/*
 * 기존에 정의된 copyDocument, bootJar 등의 태스크가 있다면,
 * 새로운 작업과 충돌하지 않도록 확인하세요.
 * 만약 기존 태스크가 더 이상 필요없다면 삭제하거나 주석 처리하시길 권장합니다.
 */

sourceSets {
    main {
        java {
            srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated/annotationProcessor/java/main"]
        }
    }
}
